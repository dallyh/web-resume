---
// Credits: https://m2.material.io/design/color/dark-theme.html
---

<div class="theme-switch-wrapper">
    <label class="theme-switch" for="checkbox">
        <input type="checkbox" id="checkbox" />
        <div class="icons">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="currentColor"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="feather feather-sun"
            >
                <circle cx="12" cy="12" r="5"></circle>
                <line x1="12" y1="1" x2="12" y2="3"></line>
                <line x1="12" y1="21" x2="12" y2="23"></line>
                <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
                <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
                <line x1="1" y1="12" x2="3" y2="12"></line>
                <line x1="21" y1="12" x2="23" y2="12"></line>
                <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
                <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
            </svg>
            <svg class="feather feather-moon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor">
                <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
            </svg>
        </div>
    </label>
</div>

<script>
    // Get the theme toggle input
    const themeToggle = document.querySelector('.theme-switch input[type="checkbox"]') as HTMLInputElement;
    // Function that will switch the theme based on if the theme toggle is checked or not
    const switchInputTheme = (e: Event) => {
        if (e === null) return;

        if ((e.target as HTMLInputElement).checked) {
            document.documentElement.setAttribute("data-theme", "dark");
            localStorage.setItem("theme", "dark");
        } else {
            document.documentElement.setAttribute("data-theme", "light");
            localStorage.setItem("theme", "light");
        }
    };

    // Add an event listener to the theme toggle, which will switch the theme
    themeToggle.addEventListener("change", switchInputTheme, false);

    // Get the current theme from local storage
    const currentTheme = localStorage.getItem("theme");
    const matchMediaScheme = () => {
        // If the current local storage item can be found
        if (currentTheme) {
            // If the current theme is dark, check the theme toggle
            if (currentTheme === "dark") {
                themeToggle.checked = true;
            }
        }
    };
    matchMediaScheme();
</script>

<style>
    .theme-switch-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        /* border-radius: 10px;
        border: 2px solid var(--accent-color);
        padding: 1em; */
        transition: all 200ms;
    }

    /*
    .theme-switch-wrapper:is(:focus, :hover, :focus-visible) {
        outline: none;
        font-weight: 600;
        color: var(--button-hover-color);
        border: 2px solid transparent;
        background-color: var(--button-bg);
    }
    */

    .theme-switch input {
        display: none;
    }

    .icons {
        position: relative;
        cursor: pointer;
        width: 29px;
        height: 29px;
    }

    .feather {
        transition: transform 500ms ease, 
                    opacity 300ms ease, 
                    fill 300ms ease;
    }

    .feather-sun {
        position: absolute;
        opacity: 1;
        width: 29px;
        height: 29px;
        color: var(--button-color);
        fill: #FCD53F;
        fill-opacity: 0.75;
    }

    .feather-moon {
        opacity: 0;
        width: 29px;
        height: 29px;
        transform: scale(-100%);
        stroke: var(--button-color);
        stroke-width: 1.2px;
        fill: transparent;
    }

    .theme-switch-wrapper:is(:focus, :hover, :focus-visible) .feather-sun {
        color: var(--button-color);
        fill: var(--button-color);
    }

    .theme-switch-wrapper:is(:focus, :hover, :focus-visible) .feather-moon {
        fill: var(--button-color);
    }

    input:checked + .icons .feather-sun {
        opacity: 0;
        transform: scale(-100%);
    }

    input:checked + .icons .feather-moon {
        opacity: 1;
        transform: scale(100%);
    }

    /* TOGGLE  
    .theme-switch-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .theme-switch {
        display: inline-block;
        height: 34px;
        position: relative;
        width: 60px;
        border-radius: 10px;
        border: 2px solid var(--accent-color)
    }

    .theme-switch input {
        display: none;
    }

    .slider {
        background-color: var(--slider-bg);
        bottom: 0;
        cursor: pointer;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        transition: 0.4s;
        border-radius: 10px;
    }

    .slider:before {
        background-color: var(--slider-bg-before);
        bottom: 4px;
        content: "";
        height: 26px;
        left: 4px;
        position: absolute;
        transition: 0.4s;
        width: 26px;
        border-radius: 50%;
    }

    input:checked + .slider {
        background-color: var(--slider-input-bg);
    }

    input:checked + .slider:before {
        transform: translateX(26px);
    }

    .slider svg {
        color: #222;
        position: absolute;
        transition: opacity 0.2s ease 0s, transform 0.35s ease 0s;
        pointer-events: none;
    }

    .feather-moon {
        opacity: 0;
        left: 9px;
        bottom: 9px;
        transform: translateX(4px);
    }

    .feather-sun {
        opacity: 1;
        right: 10px;
        bottom: 9px;
        transform: translateX(0px);
    }

    input:checked + .slider .feather-moon {
        opacity: 1;
        transform: translateX(0);
    }

    input:checked + .slider .feather-sun {
        opacity: 0;
        transform: translateX(-4px);
    }
    */
</style>
