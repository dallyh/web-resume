---
// Credits: https://github.com/yassinedoghri/astro-i18next/blob/beta/src/components/LanguageSelector.astro
// Edited for this project needs.

import i18next from "i18next";
import { localizePath } from "astro-i18next";
import localeEmoji from "locale-emoji";
import ISO6991 from "iso-639-1";

export interface Props extends astroHTML.JSX.SelectHTMLAttributes {
    showFlag?: boolean;
}

const supportedLanguages = i18next.languages;
const currentLanguage = i18next.language;

const { pathname } = Astro.url;

const { showFlag = false, ...attributes } = Astro.props;
---

<div class="language-selector">
    <select onchange="location = this.value;" {...attributes} data-js-current-language={currentLanguage}>
        {
            supportedLanguages.map((supportedLanguage: string) => {
                let value = localizePath(pathname, supportedLanguage);
                const flag = showFlag ? localeEmoji(supportedLanguage) + " " : "";
                const nativeName = ISO6991.getNativeName(supportedLanguage);
                const label = flag + nativeName;
                return (
                    <option value={value} selected={supportedLanguage === currentLanguage} data-js-language={supportedLanguage} title={label}>
                        {label}
                    </option>
                );
            })
        }
    </select>
</div>

<style>
    .language-selector {
        display: flex;
        justify-content: center;
    }

    .language-selector > select {
        padding-left: 1rem;
        font-weight: 600;
        font-size: 0.9rem;
        padding-right: 1rem;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        background-color: transparent;
        color: var(--button-color);
        font-family: sans-serif;
        text-transform: uppercase;
        border: 2px solid var(--button-bg);
        border-radius: 3px;
        transition: background-color 200ms;
        cursor: pointer;
    }

    .language-selector > select > option {
        font-weight: 400;
        font-family: inherit;
        font-size: 1rem;
        text-transform: capitalize;
    }

    .language-selector > select:is(:focus, :hover, :focus-visible) {
        outline: none;
        font-weight: 600;
        color: var(--body-bg);
        background-color: var(--button-bg);
    }
</style>
